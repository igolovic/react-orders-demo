// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orders.Infrastructure;

#nullable disable

namespace Orders.Infrastructure.Migrations
{
    [DbContext(typeof(OrdersContext))]
    [Migration("20250928122828_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Orders.Domain.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Name = "Müller GmbH"
                        },
                        new
                        {
                            ClientId = 2,
                            Name = "Testkunde"
                        },
                        new
                        {
                            ClientId = 3,
                            Name = "Schnecke-Farm GmbH"
                        },
                        new
                        {
                            ClientId = 4,
                            Name = "Mueller AG"
                        },
                        new
                        {
                            ClientId = 5,
                            Name = "Anderer Kunde"
                        });
                });

            modelBuilder.Entity("Orders.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 35,
                            ClientId = 1,
                            DateCreated = new DateTime(2025, 9, 5, 23, 37, 43, 570, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2025, 9, 5, 23, 38, 50, 840, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 36,
                            ClientId = 2,
                            DateCreated = new DateTime(2025, 9, 6, 0, 26, 39, 233, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2025, 9, 6, 1, 8, 14, 287, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 37,
                            ClientId = 2,
                            DateCreated = new DateTime(2025, 9, 6, 0, 48, 50, 253, DateTimeKind.Unspecified),
                            DateModified = new DateTime(2025, 9, 6, 1, 18, 40, 37, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderId = 38,
                            ClientId = 4,
                            DateCreated = new DateTime(2025, 9, 6, 1, 19, 21, 777, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Orders.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 60,
                            OrderId = 35,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 61,
                            OrderId = 35,
                            ProductId = 2,
                            Quantity = 3
                        },
                        new
                        {
                            OrderItemId = 62,
                            OrderId = 35,
                            ProductId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            OrderItemId = 63,
                            OrderId = 36,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 64,
                            OrderId = 36,
                            ProductId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            OrderItemId = 68,
                            OrderId = 37,
                            ProductId = 4,
                            Quantity = 100
                        },
                        new
                        {
                            OrderItemId = 72,
                            OrderId = 38,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            OrderItemId = 73,
                            OrderId = 38,
                            ProductId = 2,
                            Quantity = 333
                        });
                });

            modelBuilder.Entity("Orders.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "usb stick",
                            UnitPrice = 9.99m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "laptop",
                            UnitPrice = 1234.99m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Produkt A",
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Produkt B",
                            UnitPrice = 5.49m
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Produkt C",
                            UnitPrice = 99.95m
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "Produkt D",
                            UnitPrice = 19.99m
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "Produkt E",
                            UnitPrice = 5.49m
                        });
                });

            modelBuilder.Entity("Orders.Domain.Entities.Order", b =>
                {
                    b.HasOne("Orders.Domain.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Orders.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Orders.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Orders.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Orders.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
